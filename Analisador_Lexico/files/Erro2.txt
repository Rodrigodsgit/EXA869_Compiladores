// falta de (), {} ou [] em alguns casos

algoritmo{
	constantes{
        booleano cb1 = verdadeiro, cb2 = falso, cb3 = a||false;
        inteiro ci1 = 1, ci2 = 1+9, ci3 = 6.90, ci4 = ci1;
        real cr1 = (4-1.6, cr1 = (5)+5-a*(3+2); // erro
        cadeia cc1 = "cadeia", cc2 = "-+*("; 
        char cc1 = "A"; 
	// } nao fechou 

    variaveis { // erro pois continua consumindo como se fosse constantes
        umRegistro R1;
        booleano vb1, vb2[3], vb[3][2][1]; // erro pois constantes devem ter atribuicao "="
        inteiro vi1, vi2[2+5], vi3[4/4*4*(-4)]; 
        real vr1, vr2;
        real vr1, vr2;
        cadeia cc1[4];
        char vc1[50.2];
    }

    registro umRegistro//{ Nao abriu (mas nao importa pois o parser estar procurando o "=" pra se recuperar)
        
    }

    registro outroRegistro{
        umRegistro R1;
        booleano rb[3][2][1]; 
        inteiro ri[4/4*4*(-4)];
        real rr;
        real rr2;
        cadeia rc[4-(5/s/r)];
        char rc[50.2];
    }

    funcao vazio ide(inteiro p1, real p[(4)-3*(-4))]){  antes do -4
        retorno p1;
    }
    
    funcao booleano ide2(cadeia pc[30.76], cadeia pc, char r, umRegistro ur){
        constantes {
            real umaConstante = a; // ele se recupera somente aqui, que Ã© o primeiro '=' que ele encontra e segue lendo como se tivesse no corpo de algortimo
        }
        variaveis {
            umRegistro p;
        }
        se (true) { // erro pois ele nao sabe que esta dentro de funcao e se no corpo geral de algoritmo
            a = a ; 
        }
        leia(a,b,c);
        escreva(a,b,c);
        retorno;    
    }

    principal { //principal sem os parametros
        constantes {
            inteiro o = e+8;
            char b = "a";
        }
        variaveis{
            umRegistro ur;
            booleano b;
        }
        se (b) {  // se recupera dos parametros de principal aqui, apos o 'se', mas novamente entra em erro pois parametros necessitando de tipo

        } senao {
            v = (60/50) // ele acha 'v' como identificador, e ainda acredita esta em parametros de principal, logo procura ')' mas novamente entra em erro com '=' e acha o ')' no final da expressao
            leia(r); // ainda acredita esta na definicao de principal procurando '{' e ocorre outro erro
            escreva(v);
        }

        f = 0;
        enquanto (3!=f){ // se recupera aqui
            f = f + 1;
            escreva(f,1);
        } // erro por ter consumido o abrir chaves de 'enquanto' e encontrar fecha chaves sem a palavra reserva retorno

        enquanto (falso) {}
        
        retorno verdadeir;
    }
}