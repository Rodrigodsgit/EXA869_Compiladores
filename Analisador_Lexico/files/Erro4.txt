algoritmo{
	constantes{
        booleano cb1, cb2 = falso, cb3 = a||false; //deveria ter atribuição
        inteiro ci1 = 1, ci2 = 1+9, ci3 = 6.90, ci4 = ci1;
        real cr1 = (4)-1.6, cr1 = (5)+5-a*(); //parenteses sem valor
        cadeia cc1 = "cadeia", cc2 = "-+*()", cc3 = "3";
        char cc1 = "A";
	}

    variaveis {
        umRegistro R1; 
        booleano vb1, vb2[], vb[3][2][1]; // vetor sem tamanho
        inteiro vi1, vi2[2+5], vi3[4/4*4*(-4)];
        real , vr2; // faltou o identificador
        real vr1, vr2;
        cadeia cc1[4];
        char vc1[50.2];
    }

    registro umRegistro{
        retorno; //termo que n deveria existir
    }

    registro outroRegistro{
        umRegistro R1;
        booleano rb[3][2][1]; 
        inteiro ri[4/4*4*(-4)];
        real rr;
        real rr2;
        cadeia rc[4-(5/s/r)];
        char rc[50.2];
    }

    funcao vazio ide(inteiro p1, real p[(4)-3*((-4))]){
        retorno p1;
    }
    
    se (2>3) {} senao {} //não pode aparecer aqui

    funcao booleano ide2(cadeia pc[30.76], cadeia, char r, umRegistro ur){ //falta identificador
        constantes {
            real umaConstante = a;
        }
        variaveis {
            umRegistro p;
        }
        se (true) {
            a = 40;
        }
        leia(a,b,c);
        escreva(a,b,c);
        retorno;
    }

     principal() {
        constantes {
            inteiro o = e+8;
            char b = "b", c = "c";
        }
        variaveis{
            umRegistro ur;
            booleano b;
        }
        se (d>4||4>4) {

        } senao {
            v = (60/50) > 9 && (4-(-5)) <= o || !R;
            leia(r);
            escreva(v);
        }

        f = 0;
        enquanto (3!=f){
            f = f + 1;
            escreva(f,1);
        }


        enquanto (falso) {}
        
        retorno verdadeir;
    }
}