// ordem de constante, variavel e registro mudada
// variaveis dentro de um bloco se
// retorno dentro do bloco se

algoritmo{
    //registro no lugar errado

    
    //variaveis no lugar errado
    variaveis {
        umRegistro R1;
        booleano vb1, vb2[3], vb[3][2][1]; 
        inteiro vi1, vi2[2+5], vi3[4/4*4*(-4)];
        real vr1, vr2;
        real vr1, vr2;
        cadeia cc1[4];
        char vc1[50.2];
    }
    
    //constante no lugar errado


    registro umRegistro{
        
    }

    registro outroRegistro{
        umRegistro R1;
        booleano rb[3][2][1]; 
        inteiro ri[4/4*4*(-4)];
        real rr;
        real rr2;
        cadeia rc[4-(5/s/r)];
        char rc[50.2];
    }

    funcao vazio ide(inteiro p1, real p[(4)-3*((-4))]){
        se (2>s&&e==2){
            // Não pode ter variaveis aqui
            variaveis {
                cadeia c[4][r];
            }
            //Não pode ter retorno aqui
            retorno 0;
        }
        retorno p1;
    }
    
    funcao booleano ide2(cadeia pc[30.76], cadeia pc, char r, umRegistro ur){
        constantes {
            real umaConstante = a;
        }
        variaveis {
            umRegistro p;
        }
        se (true) {
            a = a ; 
        }
        leia(a,b,c);
        escreva(a,b,c);
        retorno;    
    }

    principal() {
        constantes {
            inteiro o = e+8;
            char b = "a";
        }
        variaveis{
            umRegistro ur;
            booleano b;
        }
        se (b) { 

        } senao {
            v = (60/50) > 9 && (4-(-5)) <= o || !R;
            leia(r);
            escreva(v);
        }

        f = 0;
        enquanto (3!=f){
            f = f + 1;
            escreva(f,1);
        }

        enquanto (falso) {}
        
        retorno verdadeir;
    }
}